static_resources:
      listeners:
      - name: pg_listener
        address:
          socket_address:
            address: 127.0.0.1
            protocol: TCP
            port_value: 10000
        filter_chains:
        - filters:
          - name: envoy.filters.network.postgres_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.postgres_proxy.v3alpha.PostgresProxy
              stat_prefix: egress_pg
              enable_sql_parsing: true
              terminate_ssl: true
              # upstream_ssl: REQUIRE
          - name: envoy.filters.network.tcp_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
              stat_prefix: pg_tcp
              cluster: pg_cluster
          transport_socket:
            name: envoy.transport_sockets.starttls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.starttls.v3.StartTlsConfig
              tls_socket_config:
                common_tls_context:
                  # tls_params:
                  #   tls_minimum_protocol_version: TLSv1_2
                  #   tls_maximum_protocol_version: TLSv1_2
                  tls_certificates:
                  - certificate_chain: {filename: "/home/user/Desktop/Drive/certs/tls.crt"}
                    private_key: {filename: "/home/user/Desktop/Drive/certs/tls.key"}
                  # validation_context:
                  #   trusted_ca:
                  #     filename: certs/ca.crt

      clusters:
      - name: pg_cluster
        type: STRICT_DNS
        load_assignment:
          cluster_name: pg_cluster
          endpoints:
          - lb_endpoints:
            - endpoint:
                address:
                  socket_address:
                    address: localhost
                    port_value: 8080
        # transport_socket:
        #   name: envoy.transport_sockets.starttls
        #   typed_config:
        #     "@type": type.googleapis.com/envoy.extensions.transport_sockets.starttls.v3.UpstreamStartTlsConfig
        #     tls_socket_config:
        #       common_tls_context:
        #         # tls_params:
        #         #   tls_minimum_protocol_version: TLSv1_2
        #         #   tls_maximum_protocol_version: TLSv1_2
        #         tls_certificates:
        #         - certificate_chain: {filename: "/certs/tls.crt"}
        #           private_key: {filename: "/certs/tls.key"}
        #         validation_context:
        #           trusted_ca:
        #             filename: /certs/ca.crt
        # error with follwoing socket: invalid length of startup packet
        # transport_socket: 
        #   name: envoy.transport_sockets.tls
        #   typed_config:
        #     "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        #     common_tls_context:
        #       tls_certificates:
        #       - certificate_chain:
        #           filename: certs/tls.crt
        #         private_key:
        #           filename: certs/tls.key
        #       # validation_context:
        #       #   match_typed_subject_alt_names:
        #       #   - san_type: DNS
        #       #     matcher:
        #       #       exact: server-pg-tls.default.svc
        #       #   trusted_ca:
        #       #     filename: certs/ca.crt              
admin:
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
